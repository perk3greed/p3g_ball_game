[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://cxmlb5vi04qsk"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6hfgf"]
input_name = "eye_offset"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_oigub"]
operator = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wdgbm"]
input_name = "node_position_world"

[resource]
code = "shader_type spatial;



void fragment() {
// Input:2
	vec3 n_out2p0 = EYE_OFFSET;


// Input:4
	vec3 n_out4p0 = NODE_POSITION_WORLD;


// ColorOp:3
	vec3 n_out3p0 = (n_out2p0) / (vec3(1.0) - n_out4p0);


// Output:0
	EMISSION = n_out3p0;


}
"
nodes/fragment/0/position = Vector2(400, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_6hfgf")
nodes/fragment/2/position = Vector2(-180, 300)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorOp_oigub")
nodes/fragment/3/position = Vector2(180, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_wdgbm")
nodes/fragment/4/position = Vector2(-200, 380)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 0, 5)
